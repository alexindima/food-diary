name: Deploy

on:
  push:
    branches:
      - master

env:
  NODE_VERSION: 22
  SERVER_IP: 193.109.69.58
  FRONTEND_DIR: frontend/food-diary-web-client
  BACKEND_DIR: backend/food-diary.web.api
  FRONTEND_DEPLOY_DIR: /var/www/fooddiary.club
  BACKEND_DEPLOY_DIR: /var/www/fooddiary-backend

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Build Angular frontend
        run: |
          echo "===================================="
          echo "STEP 1: Building Angular frontend"
          echo "===================================="
          cd ${{ env.FRONTEND_DIR }}
          npm install
          npm run build:prod
          echo "Frontend build completed."

      - name: Build NestJS backend
        run: |
          echo "===================================="
          echo "STEP 2: Building NestJS backend"
          echo "===================================="
          cd ${{ env.BACKEND_DIR }}
          npm install
          npm run build
          echo "Backend build completed."

      - name: Setting up SSH
        env:
          SSH_KEY: ${{ secrets.SSH_KEY }}
        run: |
          echo "===================================="
          echo "STEP 3: Setting up SSH"
          echo "===================================="
          mkdir -p ~/.ssh
          echo "${SSH_KEY}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          echo "SSH setup completed."

      - name: Creating directories on the server
        run: |
          echo "===================================="
          echo "STEP 4: Creating directories on the server"
          echo "===================================="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          mkdir -p "${{ env.FRONTEND_DEPLOY_DIR }}"
          mkdir -p "${{ env.BACKEND_DEPLOY_DIR }}"
          rm -rf "${{ env.FRONTEND_DEPLOY_DIR }}/*"
          rm -rf "${{ env.BACKEND_DEPLOY_DIR }}/*"
          echo "Directories created and cleaned."
          EOF

      - name: Uploading frontend files
        run: |
          echo "========================================"
          echo "STEP 5: Uploading frontend files"
          echo "========================================"
          START_TIME=$(date +%s)
          NUM_FILES=$(find ${{ env.FRONTEND_DIR }}/dist -type f | wc -l)
          echo "$NUM_FILES files to upload."
          rsync -az --quiet --human-readable -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ${{ env.FRONTEND_DIR }}/dist/ root@${{ env.SERVER_IP }}:${{ env.FRONTEND_DEPLOY_DIR }}/
          END_TIME=$(date +%s)
          echo "Uploaded $NUM_FILES files in $(($END_TIME - $START_TIME)) seconds."

      - name: Uploading backend files
        run: |
          echo "===================================="
          echo "STEP 6: Uploading backend files"
          echo "===================================="
          rsync -az --quiet --human-readable --exclude=node_modules --exclude=dist -e "ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no" \
            ${{ env.BACKEND_DIR }}/ root@${{ env.SERVER_IP }}:${{ env.BACKEND_DEPLOY_DIR }}/

      - name: Install backend dependencies on server
        run: |
          echo "===================================="
          echo "STEP 6.1: Installing backend dependencies on server"
          echo "===================================="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          cd "${{ env.BACKEND_DEPLOY_DIR }}"
          npm install --production
          EOF

      - name: Build backend on server
        run: |
          echo "===================================="
          echo "STEP 6.2: Building backend on server"
          echo "===================================="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          cd "${{ env.BACKEND_DEPLOY_DIR }}"
          npm run build
          EOF

      - name: Restarting backend with PM2
        run: |
          echo "===================================="
          echo "STEP 7: Restarting backend with PM2"
          echo "===================================="
          ssh -i ~/.ssh/id_rsa -o StrictHostKeyChecking=no root@${{ env.SERVER_IP }} << EOF
          pm2 delete fooddiary-backend || true
          NODE_ENV=production pm2 start "${{ env.BACKEND_DEPLOY_DIR }}/dist/src/main.js" --name fooddiary-backend
          EOF

      - name: Confirm deployment completion
        run: |
          echo "===================================="
          echo "DEPLOYMENT COMPLETED SUCCESSFULLY!"
          echo "===================================="
